{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSheet/VSheet.tsx", "../../vuetify/src/composables/calendar.ts"],
  "sourcesContent": ["// Styles\nimport './VSheet.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVSheetProps = propsFactory({\n  color: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VSheet')\n\nexport const VSheet = genericComponent()({\n  name: 'VSheet',\n\n  props: makeVSheetProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.color)\n    const { borderClasses } = useBorder(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-sheet',\n          themeClasses.value,\n          backgroundColorClasses.value,\n          borderClasses.value,\n          elevationClasses.value,\n          positionClasses.value,\n          roundedClasses.value,\n          props.class,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          dimensionStyles.value,\n          locationStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VSheet = InstanceType<typeof VSheet>\n", "// Composables\nimport { useDate } from '@/composables/date/date'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// Types\nexport interface CalendarProps {\n  allowedDates: unknown[] | ((date: unknown) => boolean) | undefined\n  disabled: boolean\n  displayValue?: unknown\n  modelValue: unknown[] | undefined\n  max: unknown\n  min: unknown\n  showAdjacentMonths: boolean\n  month: number | string | undefined\n  weekdays: number[]\n  year: number | string | undefined\n  weeksInMonth: 'dynamic' | 'static'\n  firstDayOfWeek: number | string | undefined\n\n  'onUpdate:modelValue': ((value: unknown[]) => void) | undefined\n  'onUpdate:month': ((value: number) => void) | undefined\n  'onUpdate:year': ((value: number) => void) | undefined\n}\n\nexport type CalendarDay = {\n  date: Date\n  formatted: string\n  isAdjacent: boolean\n  isDisabled: boolean\n  isEnd: boolean\n  isHidden: boolean\n  isSame: boolean\n  isSelected: boolean\n  isStart: boolean\n  isToday: boolean\n  isWeekEnd: boolean\n  isWeekStart: boolean\n  isoDate: string\n  localized: string\n  month: number\n  year: number\n}\n\nexport type CalendarWeekdays = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\n// Composables\nexport const makeCalendarProps = propsFactory({\n  allowedDates: [Array, Function] as PropType<unknown[] | ((date: unknown) => boolean)>,\n  disabled: {\n    type: Boolean,\n    default: null,\n  },\n  displayValue: null as any as PropType<unknown>,\n  modelValue: Array as PropType<unknown[]>,\n  month: [Number, String],\n  max: null as any as PropType<unknown>,\n  min: null as any as PropType<unknown>,\n  showAdjacentMonths: Boolean,\n  year: [Number, String],\n  weekdays: {\n    type: Array as PropType<CalendarWeekdays[]>,\n    default: () => [0, 1, 2, 3, 4, 5, 6],\n  },\n  weeksInMonth: {\n    type: String as PropType<'dynamic' | 'static'>,\n    default: 'dynamic',\n  },\n  firstDayOfWeek: {\n    type: [Number, String],\n    default: undefined,\n  },\n}, 'calendar')\n\nexport function useCalendar (props: CalendarProps) {\n  const adapter = useDate()\n  const model = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => wrapInArray(v).map(i => adapter.date(i)),\n  )\n  const displayValue = computed(() => {\n    if (props.displayValue) return adapter.date(props.displayValue)\n    if (model.value.length > 0) return adapter.date(model.value[0])\n    if (props.min) return adapter.date(props.min)\n    if (Array.isArray(props.allowedDates)) return adapter.date(props.allowedDates[0])\n\n    return adapter.date()\n  })\n\n  const year = useProxiedModel(\n    props,\n    'year',\n    undefined,\n    v => {\n      const value = v != null ? Number(v) : adapter.getYear(displayValue.value)\n\n      return adapter.startOfYear(adapter.setYear(adapter.date(), value))\n    },\n    v => adapter.getYear(v)\n  )\n\n  const month = useProxiedModel(\n    props,\n    'month',\n    undefined,\n    v => {\n      const value = v != null ? Number(v) : adapter.getMonth(displayValue.value)\n      const date = adapter.setYear(adapter.startOfMonth(adapter.date()), adapter.getYear(year.value))\n\n      return adapter.setMonth(date, value)\n    },\n    v => adapter.getMonth(v)\n  )\n\n  const weekDays = computed(() => {\n    const firstDayOfWeek = adapter.toJsDate(adapter.startOfWeek(adapter.date(), props.firstDayOfWeek)).getDay()\n    // Always generate all days, regardless of props.weekdays\n    return [0, 1, 2, 3, 4, 5, 6].map(day => (day + firstDayOfWeek) % 7)\n  })\n\n  const weeksInMonth = computed(() => {\n    const weeks = adapter.getWeekArray(month.value, props.firstDayOfWeek)\n\n    const days = weeks.flat()\n\n    // Make sure there's always 6 weeks in month (6 * 7 days)\n    // if weeksInMonth is 'static'\n    const daysInMonth = 6 * 7\n    if (props.weeksInMonth === 'static' && days.length < daysInMonth) {\n      const lastDay = days[days.length - 1]\n\n      let week = []\n      for (let day = 1; day <= daysInMonth - days.length; day++) {\n        week.push(adapter.addDays(lastDay, day))\n\n        if (day % 7 === 0) {\n          weeks.push(week)\n          week = []\n        }\n      }\n    }\n\n    return weeks\n  })\n\n  function genDays (days: Date[], today: Date): CalendarDay[] {\n    return days.filter(date => {\n      return weekDays.value.includes(adapter.toJsDate(date).getDay())\n    }).map((date, index) => {\n      const isoDate = adapter.toISO(date)\n      const isAdjacent = !adapter.isSameMonth(date, month.value)\n      const isStart = adapter.isSameDay(date, adapter.startOfMonth(month.value))\n      const isEnd = adapter.isSameDay(date, adapter.endOfMonth(month.value))\n      const isSame = adapter.isSameDay(date, month.value)\n\n      return {\n        date,\n        formatted: adapter.format(date, 'keyboardDate'),\n        isAdjacent,\n        isDisabled: isDisabled(date),\n        isEnd,\n        isHidden: isAdjacent && !props.showAdjacentMonths,\n        isSame,\n        isSelected: model.value.some(value => adapter.isSameDay(date, value)),\n        isStart,\n        isToday: adapter.isSameDay(date, today),\n        isWeekEnd: index % 7 === 6,\n        isWeekStart: index % 7 === 0,\n        isoDate,\n        localized: adapter.format(date, 'dayOfMonth'),\n        month: adapter.getMonth(date),\n        year: adapter.getYear(date),\n      }\n    })\n  }\n\n  const daysInWeek = computed(() => {\n    const lastDay = adapter.startOfWeek(displayValue.value, props.firstDayOfWeek)\n    const week: Date[] = []\n    for (let day = 0; day <= 6; day++) {\n      week.push(adapter.addDays(lastDay, day) as Date)\n    }\n\n    const today = adapter.date() as Date\n\n    return genDays(week as Date[], today as Date)\n  })\n\n  const daysInMonth = computed(() => {\n    const days = weeksInMonth.value.flat() as Date[]\n    const today = adapter.date() as Date\n\n    return genDays(days as Date[], today)\n  })\n\n  const weekNumbers = computed(() => {\n    return weeksInMonth.value.map(week => {\n      return week.length ? adapter.getWeek(week[0], props.firstDayOfWeek) : null\n    })\n  })\n\n  function isDisabled (value: unknown) {\n    if (props.disabled) return true\n\n    const date = adapter.date(value)\n\n    if (props.min && adapter.isAfter(adapter.date(props.min), date)) return true\n    if (props.max && adapter.isAfter(date, adapter.date(props.max))) return true\n\n    if (Array.isArray(props.allowedDates) && props.allowedDates.length > 0) {\n      return !props.allowedDates.some(d => adapter.isSameDay(adapter.date(d), date))\n    }\n\n    if (typeof props.allowedDates === 'function') {\n      return !props.allowedDates(date)\n    }\n\n    return !props.weekdays.includes(adapter.toJsDate(date).getDay())\n  }\n\n  return {\n    displayValue,\n    daysInMonth,\n    daysInWeek,\n    genDays,\n    model,\n    weeksInMonth,\n    weekDays,\n    weekNumbers,\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAiBO,IAAMA,kBAAkBC,aAAa;EAC1CC,OAAOC;EAEP,GAAGC,gBAAgB;EACnB,GAAGC,mBAAmB;EACtB,GAAGC,mBAAmB;EACtB,GAAGC,mBAAmB;EACtB,GAAGC,kBAAkB;EACrB,GAAGC,kBAAkB;EACrB,GAAGC,iBAAiB;EACpB,GAAGC,aAAa;EAChB,GAAGC,eAAe;AACpB,GAAG,QAAQ;AAEJ,IAAMC,SAASC,iBAAiB,EAAE;EACvCC,MAAM;EAENC,OAAOhB,gBAAgB;EAEvBiB,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;IAAa,IAAIC,aAAaL,KAAK;AAC3C,UAAM;MAAEM;MAAwBC;IAAsB,IAAIC,mBAAmB,MAAMR,MAAMd,KAAK;AAC9F,UAAM;MAAEuB;IAAc,IAAIC,UAAUV,KAAK;AACzC,UAAM;MAAEW;IAAgB,IAAIC,aAAaZ,KAAK;AAC9C,UAAM;MAAEa;IAAiB,IAAIC,aAAad,KAAK;AAC/C,UAAM;MAAEe;IAAe,IAAIC,YAAYhB,KAAK;AAC5C,UAAM;MAAEiB;IAAgB,IAAIC,YAAYlB,KAAK;AAC7C,UAAM;MAAEmB;IAAe,IAAIC,WAAWpB,KAAK;AAE3CqB,cAAU,MAAAC,YAAAtB,MAAAuB,KAAA;MAAA,SAEC,CACL,WACAnB,aAAaoB,OACblB,uBAAuBkB,OACvBf,cAAce,OACdX,iBAAiBW,OACjBP,gBAAgBO,OAChBL,eAAeK,OACfxB,MAAMyB,KAAK;MACZ,SACM,CACLlB,sBAAsBiB,OACtBb,gBAAgBa,OAChBT,eAAeS,OACfxB,MAAM0B,KAAK;IACZ,GACSvB,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;AClBM,IAAMwB,oBAAoBC,aAAa;EAC5CC,cAAc,CAACC,OAAOC,QAAQ;EAC9BC,UAAU;IACRC,MAAMC;IACNC,SAAS;EACX;EACAC,cAAc;EACdC,YAAYP;EACZQ,OAAO,CAACC,QAAQC,MAAM;EACtBC,KAAK;EACLC,KAAK;EACLC,oBAAoBT;EACpBU,MAAM,CAACL,QAAQC,MAAM;EACrBK,UAAU;IACRZ,MAAMH;IACNK,SAASA,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EACrC;EACAW,cAAc;IACZb,MAAMO;IACNL,SAAS;EACX;EACAY,gBAAgB;IACdd,MAAM,CAACM,QAAQC,MAAM;IACrBL,SAASa;EACX;AACF,GAAG,UAAU;AAEN,SAASC,YAAaC,OAAsB;AACjD,QAAMC,UAAUC,QAAQ;AACxB,QAAMC,QAAQC,gBACZJ,OACA,cACA,CAAA,GACAK,OAAKC,YAAYD,CAAC,EAAEE,IAAIC,OAAKP,QAAQQ,KAAKD,CAAC,CAAC,CAC9C;AACA,QAAMtB,eAAewB,SAAS,MAAM;AAClC,QAAIV,MAAMd,aAAc,QAAOe,QAAQQ,KAAKT,MAAMd,YAAY;AAC9D,QAAIiB,MAAMQ,MAAMC,SAAS,EAAG,QAAOX,QAAQQ,KAAKN,MAAMQ,MAAM,CAAC,CAAC;AAC9D,QAAIX,MAAMR,IAAK,QAAOS,QAAQQ,KAAKT,MAAMR,GAAG;AAC5C,QAAIZ,MAAMiC,QAAQb,MAAMrB,YAAY,EAAG,QAAOsB,QAAQQ,KAAKT,MAAMrB,aAAa,CAAC,CAAC;AAEhF,WAAOsB,QAAQQ,KAAK;EACtB,CAAC;AAED,QAAMf,OAAOU,gBACXJ,OACA,QACAF,QACAO,OAAK;AACH,UAAMM,QAAQN,KAAK,OAAOhB,OAAOgB,CAAC,IAAIJ,QAAQa,QAAQ5B,aAAayB,KAAK;AAExE,WAAOV,QAAQc,YAAYd,QAAQe,QAAQf,QAAQQ,KAAK,GAAGE,KAAK,CAAC;EACnE,GACAN,OAAKJ,QAAQa,QAAQT,CAAC,CACxB;AAEA,QAAMjB,QAAQgB,gBACZJ,OACA,SACAF,QACAO,OAAK;AACH,UAAMM,QAAQN,KAAK,OAAOhB,OAAOgB,CAAC,IAAIJ,QAAQgB,SAAS/B,aAAayB,KAAK;AACzE,UAAMF,OAAOR,QAAQe,QAAQf,QAAQiB,aAAajB,QAAQQ,KAAK,CAAC,GAAGR,QAAQa,QAAQpB,KAAKiB,KAAK,CAAC;AAE9F,WAAOV,QAAQkB,SAASV,MAAME,KAAK;EACrC,GACAN,OAAKJ,QAAQgB,SAASZ,CAAC,CACzB;AAEA,QAAMe,WAAWV,SAAS,MAAM;AAC9B,UAAMb,iBAAiBI,QAAQoB,SAASpB,QAAQqB,YAAYrB,QAAQQ,KAAK,GAAGT,MAAMH,cAAc,CAAC,EAAE0B,OAAO;AAE1G,WAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAEhB,IAAIiB,UAAQA,MAAM3B,kBAAkB,CAAC;EACpE,CAAC;AAED,QAAMD,eAAec,SAAS,MAAM;AAClC,UAAMe,QAAQxB,QAAQyB,aAAatC,MAAMuB,OAAOX,MAAMH,cAAc;AAEpE,UAAM8B,OAAOF,MAAMG,KAAK;AAIxB,UAAMC,eAAc,IAAI;AACxB,QAAI7B,MAAMJ,iBAAiB,YAAY+B,KAAKf,SAASiB,cAAa;AAChE,YAAMC,UAAUH,KAAKA,KAAKf,SAAS,CAAC;AAEpC,UAAImB,OAAO,CAAA;AACX,eAASP,MAAM,GAAGA,OAAOK,eAAcF,KAAKf,QAAQY,OAAO;AACzDO,aAAKC,KAAK/B,QAAQgC,QAAQH,SAASN,GAAG,CAAC;AAEvC,YAAIA,MAAM,MAAM,GAAG;AACjBC,gBAAMO,KAAKD,IAAI;AACfA,iBAAO,CAAA;QACT;MACF;IACF;AAEA,WAAON;EACT,CAAC;AAED,WAASS,QAASP,MAAcQ,OAA4B;AAC1D,WAAOR,KAAKS,OAAO3B,UAAQ;AACzB,aAAOW,SAAST,MAAM0B,SAASpC,QAAQoB,SAASZ,IAAI,EAAEc,OAAO,CAAC;IAChE,CAAC,EAAEhB,IAAI,CAACE,MAAM6B,UAAU;AACtB,YAAMC,UAAUtC,QAAQuC,MAAM/B,IAAI;AAClC,YAAMgC,aAAa,CAACxC,QAAQyC,YAAYjC,MAAMrB,MAAMuB,KAAK;AACzD,YAAMgC,UAAU1C,QAAQ2C,UAAUnC,MAAMR,QAAQiB,aAAa9B,MAAMuB,KAAK,CAAC;AACzE,YAAMkC,QAAQ5C,QAAQ2C,UAAUnC,MAAMR,QAAQ6C,WAAW1D,MAAMuB,KAAK,CAAC;AACrE,YAAMoC,SAAS9C,QAAQ2C,UAAUnC,MAAMrB,MAAMuB,KAAK;AAElD,aAAO;QACLF;QACAuC,WAAW/C,QAAQgD,OAAOxC,MAAM,cAAc;QAC9CgC;QACAS,YAAYA,WAAWzC,IAAI;QAC3BoC;QACAM,UAAUV,cAAc,CAACzC,MAAMP;QAC/BsD;QACAK,YAAYjD,MAAMQ,MAAM0C,KAAK1C,WAASV,QAAQ2C,UAAUnC,MAAME,KAAK,CAAC;QACpEgC;QACAW,SAASrD,QAAQ2C,UAAUnC,MAAM0B,KAAK;QACtCoB,WAAWjB,QAAQ,MAAM;QACzBkB,aAAalB,QAAQ,MAAM;QAC3BC;QACAkB,WAAWxD,QAAQgD,OAAOxC,MAAM,YAAY;QAC5CrB,OAAOa,QAAQgB,SAASR,IAAI;QAC5Bf,MAAMO,QAAQa,QAAQL,IAAI;MAC5B;IACF,CAAC;EACH;AAEA,QAAMiD,aAAahD,SAAS,MAAM;AAChC,UAAMoB,UAAU7B,QAAQqB,YAAYpC,aAAayB,OAAOX,MAAMH,cAAc;AAC5E,UAAMkC,OAAe,CAAA;AACrB,aAASP,MAAM,GAAGA,OAAO,GAAGA,OAAO;AACjCO,WAAKC,KAAK/B,QAAQgC,QAAQH,SAASN,GAAG,CAAS;IACjD;AAEA,UAAMW,QAAQlC,QAAQQ,KAAK;AAE3B,WAAOyB,QAAQH,MAAgBI,KAAa;EAC9C,CAAC;AAED,QAAMN,cAAcnB,SAAS,MAAM;AACjC,UAAMiB,OAAO/B,aAAae,MAAMiB,KAAK;AACrC,UAAMO,QAAQlC,QAAQQ,KAAK;AAE3B,WAAOyB,QAAQP,MAAgBQ,KAAK;EACtC,CAAC;AAED,QAAMwB,cAAcjD,SAAS,MAAM;AACjC,WAAOd,aAAae,MAAMJ,IAAIwB,UAAQ;AACpC,aAAOA,KAAKnB,SAASX,QAAQ2D,QAAQ7B,KAAK,CAAC,GAAG/B,MAAMH,cAAc,IAAI;IACxE,CAAC;EACH,CAAC;AAED,WAASqD,WAAYvC,OAAgB;AACnC,QAAIX,MAAMlB,SAAU,QAAO;AAE3B,UAAM2B,OAAOR,QAAQQ,KAAKE,KAAK;AAE/B,QAAIX,MAAMR,OAAOS,QAAQ4D,QAAQ5D,QAAQQ,KAAKT,MAAMR,GAAG,GAAGiB,IAAI,EAAG,QAAO;AACxE,QAAIT,MAAMT,OAAOU,QAAQ4D,QAAQpD,MAAMR,QAAQQ,KAAKT,MAAMT,GAAG,CAAC,EAAG,QAAO;AAExE,QAAIX,MAAMiC,QAAQb,MAAMrB,YAAY,KAAKqB,MAAMrB,aAAaiC,SAAS,GAAG;AACtE,aAAO,CAACZ,MAAMrB,aAAa0E,KAAKS,OAAK7D,QAAQ2C,UAAU3C,QAAQQ,KAAKqD,CAAC,GAAGrD,IAAI,CAAC;IAC/E;AAEA,QAAI,OAAOT,MAAMrB,iBAAiB,YAAY;AAC5C,aAAO,CAACqB,MAAMrB,aAAa8B,IAAI;IACjC;AAEA,WAAO,CAACT,MAAML,SAAS0C,SAASpC,QAAQoB,SAASZ,IAAI,EAAEc,OAAO,CAAC;EACjE;AAEA,SAAO;IACLrC;IACA2C;IACA6B;IACAxB;IACA/B;IACAP;IACAwB;IACAuC;EACF;AACF;",
  "names": ["makeVSheetProps", "propsFactory", "color", "String", "makeBorderProps", "makeComponentProps", "makeDimensionProps", "makeElevationProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "VSheet", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "borderClasses", "useBorder", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "useRender", "_createVNode", "tag", "value", "class", "style", "makeCalendarProps", "propsFactory", "allowedDates", "Array", "Function", "disabled", "type", "Boolean", "default", "displayValue", "modelValue", "month", "Number", "String", "max", "min", "showAdjacentMonths", "year", "weekdays", "weeksInMonth", "firstDayOfWeek", "undefined", "useCalendar", "props", "adapter", "useDate", "model", "useProxiedModel", "v", "wrapInArray", "map", "i", "date", "computed", "value", "length", "isArray", "getYear", "startOfYear", "setYear", "getMonth", "startOfMonth", "setMonth", "weekDays", "toJsDate", "startOfWeek", "getDay", "day", "weeks", "getWeekArray", "days", "flat", "daysInMonth", "lastDay", "week", "push", "addDays", "genDays", "today", "filter", "includes", "index", "isoDate", "toISO", "isAdjacent", "isSameMonth", "isStart", "isSameDay", "isEnd", "endOfMonth", "isSame", "formatted", "format", "isDisabled", "isHidden", "isSelected", "some", "isToday", "isWeekEnd", "isWeekStart", "localized", "daysInWeek", "weekNumbers", "getWeek", "isAfter", "d"]
}
